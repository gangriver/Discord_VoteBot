version: '3.8'

services:
  postgres-dev:
    image: postgres:15-alpine
    container_name: votebot-postgres-dev
    environment:
      POSTGRES_DB: votebot_dev
      POSTGRES_USER: votebot
      POSTGRES_PASSWORD: votebot123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U votebot -d votebot_dev"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-dev:
    image: redis:7-alpine
    container_name: votebot-redis-dev
    command: redis-server --requirepass redis123
    volumes:
      - redis_dev_data:/data
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Development bot service (uncomment if you want to run bot in container for dev)
  # bot-dev:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile
  #     target: development
  #   container_name: votebot-dev
  #   environment:
  #     NODE_ENV: development
  #     DISCORD_TOKEN: ${DISCORD_TOKEN}
  #     DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
  #     DATABASE_URL: postgresql://votebot:votebot123@postgres-dev:5432/votebot_dev
  #     REDIS_URL: redis://:redis123@redis-dev:6379
  #   depends_on:
  #     postgres-dev:
  #       condition: service_healthy
  #     redis-dev:
  #       condition: service_healthy
  #   volumes:
  #     - .:/app
  #     - /app/node_modules
  #   command: ["npm", "run", "dev"]

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local