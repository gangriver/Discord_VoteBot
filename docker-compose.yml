version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: votebot-postgres
    environment:
      POSTGRES_DB: votebot
      POSTGRES_USER: votebot
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-votebot123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U votebot -d votebot"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: votebot-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  bot:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: votebot-app
    environment:
      NODE_ENV: production
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DATABASE_URL: postgresql://votebot:${POSTGRES_PASSWORD:-votebot123}@postgres:5432/votebot
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["npm", "start"]

  worker:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: votebot-worker
    environment:
      NODE_ENV: production
      DISCORD_TOKEN: ${DISCORD_TOKEN}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DATABASE_URL: postgresql://votebot:${POSTGRES_PASSWORD:-votebot123}@postgres:5432/votebot
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: ["npm", "run", "worker"]

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local